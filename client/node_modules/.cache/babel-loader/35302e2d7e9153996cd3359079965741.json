{"ast":null,"code":"import _slicedToArray from \"/Users/austenhughes/The-Baffoonery/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/austenhughes/The-Baffoonery/client/src/context/AuthContext.js\";\n\nimport React, { createContext, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nvar AuthContext = createContext();\nvar Provider = AuthContext.Provider;\n\nvar AuthProvider = function AuthProvider(_ref) {\n  var children = _ref.children;\n  var history = useHistory();\n  var token = localStorage.getItem(\"token\");\n  var userInfo = localStorage.getItem(\"userInfo\");\n  var expiresAt = localStorage.getItem(\"expiresAt\");\n\n  var _useState = useState({\n    token: token,\n    expiresAt: expiresAt,\n    userInfo: userInfo ? JSON.parse(userInfo) : {}\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      authState = _useState2[0],\n      setAuthState = _useState2[1];\n\n  var setAuthInfo = function setAuthInfo(_ref2) {\n    var token = _ref2.token,\n        userInfo = _ref2.userInfo,\n        expiresAt = _ref2.expiresAt;\n    localStorage.setItem(\"token\", token);\n    localStorage.setItem(\"userInfo\", JSON.stringify(userInfo));\n    localStorage.setItem(\"expiresAt\", expiresAt);\n    setAuthState({\n      token: token,\n      userInfo: userInfo,\n      expiresAt: expiresAt\n    });\n  };\n\n  var logout = function logout() {\n    localStorage.removeItem(\"token\");\n    localStorage.removeItem(\"userInfo\");\n    localStorage.removeItem(\"expiresAt\");\n    setAuthState({});\n    history.push(\"/signin\");\n  };\n\n  var isAuthenticated = function isAuthenticated() {\n    if (!authState.token || !authState.expiresAt) {\n      return false;\n    }\n\n    return new Date().getTime() / 1000 < authState.expiresAt;\n  };\n\n  var isAdmin = function isAdmin() {\n    return authState.userInfo.role === \"admin\";\n  };\n\n  return /*#__PURE__*/React.createElement(Provider, {\n    value: {\n      authState: authState,\n      setAuthState: function setAuthState(authInfo) {\n        return setAuthInfo(authInfo);\n      },\n      logout: logout,\n      isAuthenticated: isAuthenticated,\n      isAdmin: isAdmin\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }\n  }, children);\n};\n\nexport { AuthContext, AuthProvider };","map":{"version":3,"sources":["/Users/austenhughes/The-Baffoonery/client/src/context/AuthContext.js"],"names":["React","createContext","useState","useHistory","AuthContext","Provider","AuthProvider","children","history","token","localStorage","getItem","userInfo","expiresAt","JSON","parse","authState","setAuthState","setAuthInfo","setItem","stringify","logout","removeItem","push","isAuthenticated","Date","getTime","isAdmin","role","authInfo"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,QAA/B,QAA+C,OAA/C;AACA,SAASC,UAAT,QAA2B,kBAA3B;AAEA,IAAMC,WAAW,GAAGH,aAAa,EAAjC;AACA,IAAQI,QAAR,GAAqBD,WAArB,CAAQC,QAAR;;AAEA,IAAMC,YAAY,GAAG,SAAfA,YAAe,OAAkB;AAAA,MAAfC,QAAe,QAAfA,QAAe;AACrC,MAAMC,OAAO,GAAGL,UAAU,EAA1B;AAEA,MAAMM,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd;AACA,MAAMC,QAAQ,GAAGF,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAjB;AACA,MAAME,SAAS,GAAGH,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAlB;;AAEA,kBAAkCT,QAAQ,CAAC;AACzCO,IAAAA,KAAK,EAALA,KADyC;AAEzCI,IAAAA,SAAS,EAATA,SAFyC;AAGzCD,IAAAA,QAAQ,EAAEA,QAAQ,GAAGE,IAAI,CAACC,KAAL,CAAWH,QAAX,CAAH,GAA0B;AAHH,GAAD,CAA1C;AAAA;AAAA,MAAOI,SAAP;AAAA,MAAkBC,YAAlB;;AAMA,MAAMC,WAAW,GAAG,SAAdA,WAAc,QAAoC;AAAA,QAAjCT,KAAiC,SAAjCA,KAAiC;AAAA,QAA1BG,QAA0B,SAA1BA,QAA0B;AAAA,QAAhBC,SAAgB,SAAhBA,SAAgB;AACtDH,IAAAA,YAAY,CAACS,OAAb,CAAqB,OAArB,EAA8BV,KAA9B;AACAC,IAAAA,YAAY,CAACS,OAAb,CAAqB,UAArB,EAAiCL,IAAI,CAACM,SAAL,CAAeR,QAAf,CAAjC;AACAF,IAAAA,YAAY,CAACS,OAAb,CAAqB,WAArB,EAAkCN,SAAlC;AAEAI,IAAAA,YAAY,CAAC;AACXR,MAAAA,KAAK,EAALA,KADW;AAEXG,MAAAA,QAAQ,EAARA,QAFW;AAGXC,MAAAA,SAAS,EAATA;AAHW,KAAD,CAAZ;AAKD,GAVD;;AAYA,MAAMQ,MAAM,GAAG,SAATA,MAAS,GAAM;AACnBX,IAAAA,YAAY,CAACY,UAAb,CAAwB,OAAxB;AACAZ,IAAAA,YAAY,CAACY,UAAb,CAAwB,UAAxB;AACAZ,IAAAA,YAAY,CAACY,UAAb,CAAwB,WAAxB;AACAL,IAAAA,YAAY,CAAC,EAAD,CAAZ;AACAT,IAAAA,OAAO,CAACe,IAAR,CAAa,SAAb;AACD,GAND;;AAQA,MAAMC,eAAe,GAAG,SAAlBA,eAAkB,GAAM;AAC5B,QAAI,CAACR,SAAS,CAACP,KAAX,IAAoB,CAACO,SAAS,CAACH,SAAnC,EAA8C;AAC5C,aAAO,KAAP;AACD;;AACD,WAAO,IAAIY,IAAJ,GAAWC,OAAX,KAAuB,IAAvB,GAA8BV,SAAS,CAACH,SAA/C;AACD,GALD;;AAOA,MAAMc,OAAO,GAAG,SAAVA,OAAU,GAAM;AACpB,WAAOX,SAAS,CAACJ,QAAV,CAAmBgB,IAAnB,KAA4B,OAAnC;AACD,GAFD;;AAIA,sBACE,oBAAC,QAAD;AACE,IAAA,KAAK,EAAE;AACLZ,MAAAA,SAAS,EAATA,SADK;AAELC,MAAAA,YAAY,EAAE,sBAACY,QAAD;AAAA,eAAcX,WAAW,CAACW,QAAD,CAAzB;AAAA,OAFT;AAGLR,MAAAA,MAAM,EAANA,MAHK;AAILG,MAAAA,eAAe,EAAfA,eAJK;AAKLG,MAAAA,OAAO,EAAPA;AALK,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KASGpB,QATH,CADF;AAaD,CAzDD;;AA2DA,SAASH,WAAT,EAAsBE,YAAtB","sourcesContent":["import React, { createContext, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nconst AuthContext = createContext();\nconst { Provider } = AuthContext;\n\nconst AuthProvider = ({ children }) => {\n  const history = useHistory();\n\n  const token = localStorage.getItem(\"token\");\n  const userInfo = localStorage.getItem(\"userInfo\");\n  const expiresAt = localStorage.getItem(\"expiresAt\");\n\n  const [authState, setAuthState] = useState({\n    token,\n    expiresAt,\n    userInfo: userInfo ? JSON.parse(userInfo) : {},\n  });\n\n  const setAuthInfo = ({ token, userInfo, expiresAt }) => {\n    localStorage.setItem(\"token\", token);\n    localStorage.setItem(\"userInfo\", JSON.stringify(userInfo));\n    localStorage.setItem(\"expiresAt\", expiresAt);\n\n    setAuthState({\n      token,\n      userInfo,\n      expiresAt,\n    });\n  };\n\n  const logout = () => {\n    localStorage.removeItem(\"token\");\n    localStorage.removeItem(\"userInfo\");\n    localStorage.removeItem(\"expiresAt\");\n    setAuthState({});\n    history.push(\"/signin\");\n  };\n\n  const isAuthenticated = () => {\n    if (!authState.token || !authState.expiresAt) {\n      return false;\n    }\n    return new Date().getTime() / 1000 < authState.expiresAt;\n  };\n\n  const isAdmin = () => {\n    return authState.userInfo.role === \"admin\";\n  };\n\n  return (\n    <Provider\n      value={{\n        authState,\n        setAuthState: (authInfo) => setAuthInfo(authInfo),\n        logout,\n        isAuthenticated,\n        isAdmin,\n      }}\n    >\n      {children}\n    </Provider>\n  );\n};\n\nexport { AuthContext, AuthProvider };\n"]},"metadata":{},"sourceType":"module"}