{"ast":null,"code":"'use strict'; // tar -c\n\nvar hlo = require('./high-level-opt.js');\n\nvar Pack = require('./pack.js');\n\nvar fsm = require('fs-minipass');\n\nvar t = require('./list.js');\n\nvar path = require('path');\n\nmodule.exports = function (opt_, files, cb) {\n  if (typeof files === 'function') cb = files;\n  if (Array.isArray(opt_)) files = opt_, opt_ = {};\n  if (!files || !Array.isArray(files) || !files.length) throw new TypeError('no files or directories specified');\n  files = Array.from(files);\n  var opt = hlo(opt_);\n  if (opt.sync && typeof cb === 'function') throw new TypeError('callback not supported for sync tar functions');\n  if (!opt.file && typeof cb === 'function') throw new TypeError('callback only supported with file option');\n  return opt.file && opt.sync ? createFileSync(opt, files) : opt.file ? createFile(opt, files, cb) : opt.sync ? createSync(opt, files) : create(opt, files);\n};\n\nvar createFileSync = function createFileSync(opt, files) {\n  var p = new Pack.Sync(opt);\n  var stream = new fsm.WriteStreamSync(opt.file, {\n    mode: opt.mode || 438\n  });\n  p.pipe(stream);\n  addFilesSync(p, files);\n};\n\nvar createFile = function createFile(opt, files, cb) {\n  var p = new Pack(opt);\n  var stream = new fsm.WriteStream(opt.file, {\n    mode: opt.mode || 438\n  });\n  p.pipe(stream);\n  var promise = new Promise(function (res, rej) {\n    stream.on('error', rej);\n    stream.on('close', res);\n    p.on('error', rej);\n  });\n  addFilesAsync(p, files);\n  return cb ? promise.then(cb, cb) : promise;\n};\n\nvar addFilesSync = function addFilesSync(p, files) {\n  files.forEach(function (file) {\n    if (file.charAt(0) === '@') {\n      t({\n        file: path.resolve(p.cwd, file.substr(1)),\n        sync: true,\n        noResume: true,\n        onentry: function onentry(entry) {\n          return p.add(entry);\n        }\n      });\n    } else p.add(file);\n  });\n  p.end();\n};\n\nvar addFilesAsync = function addFilesAsync(p, files) {\n  while (files.length) {\n    var file = files.shift();\n\n    if (file.charAt(0) === '@') {\n      return t({\n        file: path.resolve(p.cwd, file.substr(1)),\n        noResume: true,\n        onentry: function onentry(entry) {\n          return p.add(entry);\n        }\n      }).then(function (_) {\n        return addFilesAsync(p, files);\n      });\n    } else p.add(file);\n  }\n\n  p.end();\n};\n\nvar createSync = function createSync(opt, files) {\n  var p = new Pack.Sync(opt);\n  addFilesSync(p, files);\n  return p;\n};\n\nvar create = function create(opt, files) {\n  var p = new Pack(opt);\n  addFilesAsync(p, files);\n  return p;\n};","map":{"version":3,"sources":["/Users/austenhughes/The-Baffoonery/node_modules/tar/lib/create.js"],"names":["hlo","require","Pack","fsm","t","path","module","exports","opt_","files","cb","Array","isArray","length","TypeError","from","opt","sync","file","createFileSync","createFile","createSync","create","p","Sync","stream","WriteStreamSync","mode","pipe","addFilesSync","WriteStream","promise","Promise","res","rej","on","addFilesAsync","then","forEach","charAt","resolve","cwd","substr","noResume","onentry","entry","add","end","shift","_"],"mappings":"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","sourcesContent":["'use strict'\n\n// tar -c\nconst hlo = require('./high-level-opt.js')\n\nconst Pack = require('./pack.js')\nconst fsm = require('fs-minipass')\nconst t = require('./list.js')\nconst path = require('path')\n\nmodule.exports = (opt_, files, cb) => {\n  if (typeof files === 'function')\n    cb = files\n\n  if (Array.isArray(opt_))\n    files = opt_, opt_ = {}\n\n  if (!files || !Array.isArray(files) || !files.length)\n    throw new TypeError('no files or directories specified')\n\n  files = Array.from(files)\n\n  const opt = hlo(opt_)\n\n  if (opt.sync && typeof cb === 'function')\n    throw new TypeError('callback not supported for sync tar functions')\n\n  if (!opt.file && typeof cb === 'function')\n    throw new TypeError('callback only supported with file option')\n\n  return opt.file && opt.sync ? createFileSync(opt, files)\n    : opt.file ? createFile(opt, files, cb)\n    : opt.sync ? createSync(opt, files)\n    : create(opt, files)\n}\n\nconst createFileSync = (opt, files) => {\n  const p = new Pack.Sync(opt)\n  const stream = new fsm.WriteStreamSync(opt.file, {\n    mode: opt.mode || 0o666,\n  })\n  p.pipe(stream)\n  addFilesSync(p, files)\n}\n\nconst createFile = (opt, files, cb) => {\n  const p = new Pack(opt)\n  const stream = new fsm.WriteStream(opt.file, {\n    mode: opt.mode || 0o666,\n  })\n  p.pipe(stream)\n\n  const promise = new Promise((res, rej) => {\n    stream.on('error', rej)\n    stream.on('close', res)\n    p.on('error', rej)\n  })\n\n  addFilesAsync(p, files)\n\n  return cb ? promise.then(cb, cb) : promise\n}\n\nconst addFilesSync = (p, files) => {\n  files.forEach(file => {\n    if (file.charAt(0) === '@') {\n      t({\n        file: path.resolve(p.cwd, file.substr(1)),\n        sync: true,\n        noResume: true,\n        onentry: entry => p.add(entry),\n      })\n    } else\n      p.add(file)\n  })\n  p.end()\n}\n\nconst addFilesAsync = (p, files) => {\n  while (files.length) {\n    const file = files.shift()\n    if (file.charAt(0) === '@') {\n      return t({\n        file: path.resolve(p.cwd, file.substr(1)),\n        noResume: true,\n        onentry: entry => p.add(entry),\n      }).then(_ => addFilesAsync(p, files))\n    } else\n      p.add(file)\n  }\n  p.end()\n}\n\nconst createSync = (opt, files) => {\n  const p = new Pack.Sync(opt)\n  addFilesSync(p, files)\n  return p\n}\n\nconst create = (opt, files) => {\n  const p = new Pack(opt)\n  addFilesAsync(p, files)\n  return p\n}\n"]},"metadata":{},"sourceType":"script"}