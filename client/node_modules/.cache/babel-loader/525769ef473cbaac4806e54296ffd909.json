{"ast":null,"code":"var _objectSpread = require(\"/Users/austenhughes/The-Baffoonery/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/objectSpread2\");\n\nvar _require = require('util'),\n    promisify = _require.promisify;\n\nvar fs = require('fs');\n\nvar optsArg = function optsArg(opts) {\n  if (!opts) opts = {\n    mode: 511,\n    fs: fs\n  };else if (typeof opts === 'object') opts = _objectSpread({\n    mode: 511,\n    fs: fs\n  }, opts);else if (typeof opts === 'number') opts = {\n    mode: opts,\n    fs: fs\n  };else if (typeof opts === 'string') opts = {\n    mode: parseInt(opts, 8),\n    fs: fs\n  };else throw new TypeError('invalid options argument');\n  opts.mkdir = opts.mkdir || opts.fs.mkdir || fs.mkdir;\n  opts.mkdirAsync = promisify(opts.mkdir);\n  opts.stat = opts.stat || opts.fs.stat || fs.stat;\n  opts.statAsync = promisify(opts.stat);\n  opts.statSync = opts.statSync || opts.fs.statSync || fs.statSync;\n  opts.mkdirSync = opts.mkdirSync || opts.fs.mkdirSync || fs.mkdirSync;\n  return opts;\n};\n\nmodule.exports = optsArg;","map":{"version":3,"sources":["/Users/austenhughes/The-Baffoonery/node_modules/mkdirp/lib/opts-arg.js"],"names":["require","promisify","fs","optsArg","opts","mode","parseInt","TypeError","mkdir","mkdirAsync","stat","statAsync","statSync","mkdirSync","module","exports"],"mappings":";;AAAA,eAAsBA,OAAO,CAAC,MAAD,CAA7B;AAAA,IAAQC,SAAR,YAAQA,SAAR;;AACA,IAAMC,EAAE,GAAGF,OAAO,CAAC,IAAD,CAAlB;;AACA,IAAMG,OAAO,GAAG,SAAVA,OAAU,CAAAC,IAAI,EAAI;AACtB,MAAI,CAACA,IAAL,EACEA,IAAI,GAAG;AAAEC,IAAAA,IAAI,EAAE,GAAR;AAAeH,IAAAA,EAAE,EAAFA;AAAf,GAAP,CADF,KAEK,IAAI,OAAOE,IAAP,KAAgB,QAApB,EACHA,IAAI;AAAKC,IAAAA,IAAI,EAAE,GAAX;AAAkBH,IAAAA,EAAE,EAAFA;AAAlB,KAAyBE,IAAzB,CAAJ,CADG,KAEA,IAAI,OAAOA,IAAP,KAAgB,QAApB,EACHA,IAAI,GAAG;AAAEC,IAAAA,IAAI,EAAED,IAAR;AAAcF,IAAAA,EAAE,EAAFA;AAAd,GAAP,CADG,KAEA,IAAI,OAAOE,IAAP,KAAgB,QAApB,EACHA,IAAI,GAAG;AAAEC,IAAAA,IAAI,EAAEC,QAAQ,CAACF,IAAD,EAAO,CAAP,CAAhB;AAA2BF,IAAAA,EAAE,EAAFA;AAA3B,GAAP,CADG,KAGH,MAAM,IAAIK,SAAJ,CAAc,0BAAd,CAAN;AAEFH,EAAAA,IAAI,CAACI,KAAL,GAAaJ,IAAI,CAACI,KAAL,IAAcJ,IAAI,CAACF,EAAL,CAAQM,KAAtB,IAA+BN,EAAE,CAACM,KAA/C;AACAJ,EAAAA,IAAI,CAACK,UAAL,GAAkBR,SAAS,CAACG,IAAI,CAACI,KAAN,CAA3B;AACAJ,EAAAA,IAAI,CAACM,IAAL,GAAYN,IAAI,CAACM,IAAL,IAAaN,IAAI,CAACF,EAAL,CAAQQ,IAArB,IAA6BR,EAAE,CAACQ,IAA5C;AACAN,EAAAA,IAAI,CAACO,SAAL,GAAiBV,SAAS,CAACG,IAAI,CAACM,IAAN,CAA1B;AACAN,EAAAA,IAAI,CAACQ,QAAL,GAAgBR,IAAI,CAACQ,QAAL,IAAiBR,IAAI,CAACF,EAAL,CAAQU,QAAzB,IAAqCV,EAAE,CAACU,QAAxD;AACAR,EAAAA,IAAI,CAACS,SAAL,GAAiBT,IAAI,CAACS,SAAL,IAAkBT,IAAI,CAACF,EAAL,CAAQW,SAA1B,IAAuCX,EAAE,CAACW,SAA3D;AACA,SAAOT,IAAP;AACD,CAnBD;;AAoBAU,MAAM,CAACC,OAAP,GAAiBZ,OAAjB","sourcesContent":["const { promisify } = require('util')\nconst fs = require('fs')\nconst optsArg = opts => {\n  if (!opts)\n    opts = { mode: 0o777, fs }\n  else if (typeof opts === 'object')\n    opts = { mode: 0o777, fs, ...opts }\n  else if (typeof opts === 'number')\n    opts = { mode: opts, fs }\n  else if (typeof opts === 'string')\n    opts = { mode: parseInt(opts, 8), fs }\n  else\n    throw new TypeError('invalid options argument')\n\n  opts.mkdir = opts.mkdir || opts.fs.mkdir || fs.mkdir\n  opts.mkdirAsync = promisify(opts.mkdir)\n  opts.stat = opts.stat || opts.fs.stat || fs.stat\n  opts.statAsync = promisify(opts.stat)\n  opts.statSync = opts.statSync || opts.fs.statSync || fs.statSync\n  opts.mkdirSync = opts.mkdirSync || opts.fs.mkdirSync || fs.mkdirSync\n  return opts\n}\nmodule.exports = optsArg\n"]},"metadata":{},"sourceType":"script"}