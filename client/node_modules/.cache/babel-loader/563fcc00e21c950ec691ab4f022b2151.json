{"ast":null,"code":"'use strict'; // turn tar(1) style args like `C` into the more verbose things like `cwd`\n\nvar argmap = new Map([['C', 'cwd'], ['f', 'file'], ['z', 'gzip'], ['P', 'preservePaths'], ['U', 'unlink'], ['strip-components', 'strip'], ['stripComponents', 'strip'], ['keep-newer', 'newer'], ['keepNewer', 'newer'], ['keep-newer-files', 'newer'], ['keepNewerFiles', 'newer'], ['k', 'keep'], ['keep-existing', 'keep'], ['keepExisting', 'keep'], ['m', 'noMtime'], ['no-mtime', 'noMtime'], ['p', 'preserveOwner'], ['L', 'follow'], ['h', 'follow']]);\n\nmodule.exports = function (opt) {\n  return opt ? Object.keys(opt).map(function (k) {\n    return [argmap.has(k) ? argmap.get(k) : k, opt[k]];\n  }).reduce(function (set, kv) {\n    return set[kv[0]] = kv[1], set;\n  }, Object.create(null)) : {};\n};","map":{"version":3,"sources":["/Users/austenhughes/The-Baffoonery/node_modules/tar/lib/high-level-opt.js"],"names":["argmap","Map","module","exports","opt","Object","keys","map","k","has","get","reduce","set","kv","create"],"mappings":"AAAA,a,CAEA;;AAEA,IAAMA,MAAM,GAAG,IAAIC,GAAJ,CAAQ,CACrB,CAAC,GAAD,EAAM,KAAN,CADqB,EAErB,CAAC,GAAD,EAAM,MAAN,CAFqB,EAGrB,CAAC,GAAD,EAAM,MAAN,CAHqB,EAIrB,CAAC,GAAD,EAAM,eAAN,CAJqB,EAKrB,CAAC,GAAD,EAAM,QAAN,CALqB,EAMrB,CAAC,kBAAD,EAAqB,OAArB,CANqB,EAOrB,CAAC,iBAAD,EAAoB,OAApB,CAPqB,EAQrB,CAAC,YAAD,EAAe,OAAf,CARqB,EASrB,CAAC,WAAD,EAAc,OAAd,CATqB,EAUrB,CAAC,kBAAD,EAAqB,OAArB,CAVqB,EAWrB,CAAC,gBAAD,EAAmB,OAAnB,CAXqB,EAYrB,CAAC,GAAD,EAAM,MAAN,CAZqB,EAarB,CAAC,eAAD,EAAkB,MAAlB,CAbqB,EAcrB,CAAC,cAAD,EAAiB,MAAjB,CAdqB,EAerB,CAAC,GAAD,EAAM,SAAN,CAfqB,EAgBrB,CAAC,UAAD,EAAa,SAAb,CAhBqB,EAiBrB,CAAC,GAAD,EAAM,eAAN,CAjBqB,EAkBrB,CAAC,GAAD,EAAM,QAAN,CAlBqB,EAmBrB,CAAC,GAAD,EAAM,QAAN,CAnBqB,CAAR,CAAf;;AAsBAC,MAAM,CAACC,OAAP,GAAiB,UAAAC,GAAG;AAAA,SAAIA,GAAG,GAAGC,MAAM,CAACC,IAAP,CAAYF,GAAZ,EAAiBG,GAAjB,CAAqB,UAAAC,CAAC;AAAA,WAAI,CACtDR,MAAM,CAACS,GAAP,CAAWD,CAAX,IAAgBR,MAAM,CAACU,GAAP,CAAWF,CAAX,CAAhB,GAAgCA,CADsB,EACnBJ,GAAG,CAACI,CAAD,CADgB,CAAJ;AAAA,GAAtB,EAE3BG,MAF2B,CAEpB,UAACC,GAAD,EAAMC,EAAN;AAAA,WAAcD,GAAG,CAACC,EAAE,CAAC,CAAD,CAAH,CAAH,GAAaA,EAAE,CAAC,CAAD,CAAf,EAAoBD,GAAlC;AAAA,GAFoB,EAEoBP,MAAM,CAACS,MAAP,CAAc,IAAd,CAFpB,CAAH,GAE8C,EAFrD;AAAA,CAApB","sourcesContent":["'use strict'\n\n// turn tar(1) style args like `C` into the more verbose things like `cwd`\n\nconst argmap = new Map([\n  ['C', 'cwd'],\n  ['f', 'file'],\n  ['z', 'gzip'],\n  ['P', 'preservePaths'],\n  ['U', 'unlink'],\n  ['strip-components', 'strip'],\n  ['stripComponents', 'strip'],\n  ['keep-newer', 'newer'],\n  ['keepNewer', 'newer'],\n  ['keep-newer-files', 'newer'],\n  ['keepNewerFiles', 'newer'],\n  ['k', 'keep'],\n  ['keep-existing', 'keep'],\n  ['keepExisting', 'keep'],\n  ['m', 'noMtime'],\n  ['no-mtime', 'noMtime'],\n  ['p', 'preserveOwner'],\n  ['L', 'follow'],\n  ['h', 'follow'],\n])\n\nmodule.exports = opt => opt ? Object.keys(opt).map(k => [\n  argmap.has(k) ? argmap.get(k) : k, opt[k],\n]).reduce((set, kv) => (set[kv[0]] = kv[1], set), Object.create(null)) : {}\n"]},"metadata":{},"sourceType":"script"}