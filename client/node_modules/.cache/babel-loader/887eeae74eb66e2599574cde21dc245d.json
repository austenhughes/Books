{"ast":null,"code":"// Get the appropriate flag to use for creating files\n// We use fmap on Windows platforms for files less than\n// 512kb.  This is a fairly low limit, but avoids making\n// things slower in some cases.  Since most of what this\n// library is used for is extracting tarballs of many\n// relatively small files in npm packages and the like,\n// it can be a big boost on Windows platforms.\n// Only supported in Node v12.9.0 and above.\nvar platform = process.env.__FAKE_PLATFORM__ || process.platform;\nvar isWindows = platform === 'win32';\n\nvar fs = global.__FAKE_TESTING_FS__ || require('fs');\n/* istanbul ignore next */\n\n\nvar _fs$constants = fs.constants,\n    O_CREAT = _fs$constants.O_CREAT,\n    O_TRUNC = _fs$constants.O_TRUNC,\n    O_WRONLY = _fs$constants.O_WRONLY,\n    _fs$constants$UV_FS_O = _fs$constants.UV_FS_O_FILEMAP,\n    UV_FS_O_FILEMAP = _fs$constants$UV_FS_O === void 0 ? 0 : _fs$constants$UV_FS_O;\nvar fMapEnabled = isWindows && !!UV_FS_O_FILEMAP;\nvar fMapLimit = 512 * 1024;\nvar fMapFlag = UV_FS_O_FILEMAP | O_TRUNC | O_CREAT | O_WRONLY;\nmodule.exports = !fMapEnabled ? function () {\n  return 'w';\n} : function (size) {\n  return size < fMapLimit ? fMapFlag : 'w';\n};","map":{"version":3,"sources":["/Users/austenhughes/The-Baffoonery/node_modules/tar/lib/get-write-flag.js"],"names":["platform","process","env","__FAKE_PLATFORM__","isWindows","fs","global","__FAKE_TESTING_FS__","require","constants","O_CREAT","O_TRUNC","O_WRONLY","UV_FS_O_FILEMAP","fMapEnabled","fMapLimit","fMapFlag","module","exports","size"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAMA,QAAQ,GAAGC,OAAO,CAACC,GAAR,CAAYC,iBAAZ,IAAiCF,OAAO,CAACD,QAA1D;AACA,IAAMI,SAAS,GAAGJ,QAAQ,KAAK,OAA/B;;AACA,IAAMK,EAAE,GAAGC,MAAM,CAACC,mBAAP,IAA8BC,OAAO,CAAC,IAAD,CAAhD;AAEA;;;AACA,oBAA4DH,EAAE,CAACI,SAA/D;AAAA,IAAQC,OAAR,iBAAQA,OAAR;AAAA,IAAiBC,OAAjB,iBAAiBA,OAAjB;AAAA,IAA0BC,QAA1B,iBAA0BA,QAA1B;AAAA,0CAAoCC,eAApC;AAAA,IAAoCA,eAApC,sCAAsD,CAAtD;AAEA,IAAMC,WAAW,GAAGV,SAAS,IAAI,CAAC,CAACS,eAAnC;AACA,IAAME,SAAS,GAAG,MAAM,IAAxB;AACA,IAAMC,QAAQ,GAAGH,eAAe,GAAGF,OAAlB,GAA4BD,OAA5B,GAAsCE,QAAvD;AACAK,MAAM,CAACC,OAAP,GAAiB,CAACJ,WAAD,GAAe;AAAA,SAAM,GAAN;AAAA,CAAf,GACb,UAAAK,IAAI;AAAA,SAAIA,IAAI,GAAGJ,SAAP,GAAmBC,QAAnB,GAA8B,GAAlC;AAAA,CADR","sourcesContent":["// Get the appropriate flag to use for creating files\n// We use fmap on Windows platforms for files less than\n// 512kb.  This is a fairly low limit, but avoids making\n// things slower in some cases.  Since most of what this\n// library is used for is extracting tarballs of many\n// relatively small files in npm packages and the like,\n// it can be a big boost on Windows platforms.\n// Only supported in Node v12.9.0 and above.\nconst platform = process.env.__FAKE_PLATFORM__ || process.platform\nconst isWindows = platform === 'win32'\nconst fs = global.__FAKE_TESTING_FS__ || require('fs')\n\n/* istanbul ignore next */\nconst { O_CREAT, O_TRUNC, O_WRONLY, UV_FS_O_FILEMAP = 0 } = fs.constants\n\nconst fMapEnabled = isWindows && !!UV_FS_O_FILEMAP\nconst fMapLimit = 512 * 1024\nconst fMapFlag = UV_FS_O_FILEMAP | O_TRUNC | O_CREAT | O_WRONLY\nmodule.exports = !fMapEnabled ? () => 'w'\n  : size => size < fMapLimit ? fMapFlag : 'w'\n"]},"metadata":{},"sourceType":"script"}