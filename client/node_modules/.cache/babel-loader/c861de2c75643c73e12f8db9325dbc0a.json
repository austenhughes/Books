{"ast":null,"code":"var _require = require('path'),\n    dirname = _require.dirname;\n\nvar findMade = function findMade(opts, parent) {\n  var path = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : undefined;\n  // we never want the 'made' return value to be a root directory\n  if (path === parent) return Promise.resolve();\n  return opts.statAsync(parent).then(function (st) {\n    return st.isDirectory() ? path : undefined;\n  }, // will fail later\n  function (er) {\n    return er.code === 'ENOENT' ? findMade(opts, dirname(parent), parent) : undefined;\n  });\n};\n\nvar findMadeSync = function findMadeSync(opts, parent) {\n  var path = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : undefined;\n  if (path === parent) return undefined;\n\n  try {\n    return opts.statSync(parent).isDirectory() ? path : undefined;\n  } catch (er) {\n    return er.code === 'ENOENT' ? findMadeSync(opts, dirname(parent), parent) : undefined;\n  }\n};\n\nmodule.exports = {\n  findMade: findMade,\n  findMadeSync: findMadeSync\n};","map":{"version":3,"sources":["/Users/austenhughes/The-Baffoonery/node_modules/mkdirp/lib/find-made.js"],"names":["require","dirname","findMade","opts","parent","path","undefined","Promise","resolve","statAsync","then","st","isDirectory","er","code","findMadeSync","statSync","module","exports"],"mappings":"AAAA,eAAkBA,OAAO,CAAC,MAAD,CAAzB;AAAA,IAAOC,OAAP,YAAOA,OAAP;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,IAAD,EAAOC,MAAP,EAAoC;AAAA,MAArBC,IAAqB,uEAAdC,SAAc;AACnD;AACA,MAAID,IAAI,KAAKD,MAAb,EACE,OAAOG,OAAO,CAACC,OAAR,EAAP;AAEF,SAAOL,IAAI,CAACM,SAAL,CAAeL,MAAf,EAAuBM,IAAvB,CACL,UAAAC,EAAE;AAAA,WAAIA,EAAE,CAACC,WAAH,KAAmBP,IAAnB,GAA0BC,SAA9B;AAAA,GADG,EACsC;AAC3C,YAAAO,EAAE;AAAA,WAAIA,EAAE,CAACC,IAAH,KAAY,QAAZ,GACFZ,QAAQ,CAACC,IAAD,EAAOF,OAAO,CAACG,MAAD,CAAd,EAAwBA,MAAxB,CADN,GAEFE,SAFF;AAAA,GAFG,CAAP;AAMD,CAXD;;AAaA,IAAMS,YAAY,GAAG,SAAfA,YAAe,CAACZ,IAAD,EAAOC,MAAP,EAAoC;AAAA,MAArBC,IAAqB,uEAAdC,SAAc;AACvD,MAAID,IAAI,KAAKD,MAAb,EACE,OAAOE,SAAP;;AAEF,MAAI;AACF,WAAOH,IAAI,CAACa,QAAL,CAAcZ,MAAd,EAAsBQ,WAAtB,KAAsCP,IAAtC,GAA6CC,SAApD;AACD,GAFD,CAEE,OAAOO,EAAP,EAAW;AACX,WAAOA,EAAE,CAACC,IAAH,KAAY,QAAZ,GACHC,YAAY,CAACZ,IAAD,EAAOF,OAAO,CAACG,MAAD,CAAd,EAAwBA,MAAxB,CADT,GAEHE,SAFJ;AAGD;AACF,CAXD;;AAaAW,MAAM,CAACC,OAAP,GAAiB;AAAChB,EAAAA,QAAQ,EAARA,QAAD;AAAWa,EAAAA,YAAY,EAAZA;AAAX,CAAjB","sourcesContent":["const {dirname} = require('path')\n\nconst findMade = (opts, parent, path = undefined) => {\n  // we never want the 'made' return value to be a root directory\n  if (path === parent)\n    return Promise.resolve()\n\n  return opts.statAsync(parent).then(\n    st => st.isDirectory() ? path : undefined, // will fail later\n    er => er.code === 'ENOENT'\n      ? findMade(opts, dirname(parent), parent)\n      : undefined\n  )\n}\n\nconst findMadeSync = (opts, parent, path = undefined) => {\n  if (path === parent)\n    return undefined\n\n  try {\n    return opts.statSync(parent).isDirectory() ? path : undefined\n  } catch (er) {\n    return er.code === 'ENOENT'\n      ? findMadeSync(opts, dirname(parent), parent)\n      : undefined\n  }\n}\n\nmodule.exports = {findMade, findMadeSync}\n"]},"metadata":{},"sourceType":"script"}