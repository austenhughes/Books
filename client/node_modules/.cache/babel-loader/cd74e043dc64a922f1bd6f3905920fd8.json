{"ast":null,"code":"import _slicedToArray from \"/Users/austenhughes/The-Baffoonery/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"/Users/austenhughes/The-Baffoonery/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _toConsumableArray from \"/Users/austenhughes/The-Baffoonery/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"/Users/austenhughes/The-Baffoonery/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _excluded = [\"value\"];\n\nvar _this = this,\n    _jsxFileName = \"/Users/austenhughes/The-Baffoonery/client/src/utils/GlobalState.js\";\n\nimport React, { createContext, useReducer, useContext } from \"react\";\nimport { SET_CURRENT_JOKE // REMOVE_POST,\n// UPDATE_POSTS,\n// ADD_POST,\n, ADD_FAVORITE // UPDATE_FAVORITES,\n// REMOVE_FAVORITE,\n, LOADING } from \"./actions\";\nvar StoreContext = createContext();\nvar Provider = StoreContext.Provider;\n\nvar reducer = function reducer(state, action) {\n  switch (action.type) {\n    case SET_CURRENT_JOKE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        currentJoke: action.joke,\n        loading: false\n      });\n    // case UPDATE_POSTS:\n    //   return {\n    //     ...state,\n    //     posts: [...action.posts],\n    //     loading: false\n    //   };\n    // case ADD_POST:\n    //   return {\n    //     ...state,\n    //     posts: [action.post, ...state.posts],\n    //     loading: false\n    //   };\n    // case REMOVE_POST:\n    //   return {\n    //     ...state,\n    //     posts: state.posts.filter((post) => {\n    //       return post._id !== action._id; \n    //     })\n    //   };\n\n    case ADD_FAVORITE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        favorites: [action.post].concat(_toConsumableArray(state.favorites)),\n        loading: false\n      });\n    // case UPDATE_FAVORITES:\n    //   return {\n    //     ...state,\n    //     favorites: [...state.favorites],\n    //     loading: false\n    //   };\n    // case REMOVE_FAVORITE:\n    //   return {\n    //     ...state,\n    //     favorites: state.favorites.filter((post) => {\n    //       return post._id !== action._id; \n    //     })\n    //   };\n\n    case LOADING:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        loading: true\n      });\n\n    default:\n      return state;\n  }\n};\n\nvar StoreProvider = function StoreProvider(_ref) {\n  var _ref$value = _ref.value,\n      value = _ref$value === void 0 ? [] : _ref$value,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  var _useReducer = useReducer(reducer, {\n    jokes: [],\n    currentJoke: {\n      _id: 0,\n      joketype: \"\",\n      partOne: \"\",\n      partTwo: \"\"\n    },\n    favorites: [],\n    loading: false\n  }),\n      _useReducer2 = _slicedToArray(_useReducer, 2),\n      state = _useReducer2[0],\n      dispatch = _useReducer2[1];\n\n  return /*#__PURE__*/React.createElement(Provider, Object.assign({\n    value: [state, dispatch]\n  }, props, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 10\n    }\n  }));\n};\n\nvar useStoreContext = function useStoreContext() {\n  return useContext(StoreContext);\n};\n\nexport { StoreProvider, useStoreContext };","map":{"version":3,"sources":["/Users/austenhughes/The-Baffoonery/client/src/utils/GlobalState.js"],"names":["React","createContext","useReducer","useContext","SET_CURRENT_JOKE","ADD_FAVORITE","LOADING","StoreContext","Provider","reducer","state","action","type","currentJoke","joke","loading","favorites","post","StoreProvider","value","props","jokes","_id","joketype","partOne","partTwo","dispatch","useStoreContext"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,UAA/B,EAA2CC,UAA3C,QAA6D,OAA7D;AACA,SACEC,gBADF,CAEE;AACA;AACA;AAJF,EAKEC,YALF,CAME;AACA;AAPF,EAQEC,OARF,QASO,WATP;AAWA,IAAMC,YAAY,GAAGN,aAAa,EAAlC;AACA,IAAQO,QAAR,GAAqBD,YAArB,CAAQC,QAAR;;AAEA,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAACC,KAAD,EAAQC,MAAR,EAAmB;AACjC,UAAQA,MAAM,CAACC,IAAf;AACA,SAAKR,gBAAL;AACE,6CACKM,KADL;AAEEG,QAAAA,WAAW,EAAEF,MAAM,CAACG,IAFtB;AAGEC,QAAAA,OAAO,EAAE;AAHX;AAMF;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAAKV,YAAL;AACE,6CACKK,KADL;AAEEM,QAAAA,SAAS,GAAGL,MAAM,CAACM,IAAV,4BAAmBP,KAAK,CAACM,SAAzB,EAFX;AAGED,QAAAA,OAAO,EAAE;AAHX;AAMF;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAAKT,OAAL;AACE,6CACKI,KADL;AAEEK,QAAAA,OAAO,EAAE;AAFX;;AAKF;AACE,aAAOL,KAAP;AA3DF;AA6DD,CA9DD;;AAgEA,IAAMQ,aAAa,GAAG,SAAhBA,aAAgB,OAA8B;AAAA,wBAA3BC,KAA2B;AAAA,MAA3BA,KAA2B,2BAAnB,EAAmB;AAAA,MAAZC,KAAY;;AAClD,oBAA0BlB,UAAU,CAACO,OAAD,EAAU;AAC5CY,IAAAA,KAAK,EAAE,EADqC;AAE5CR,IAAAA,WAAW,EAAE;AACXS,MAAAA,GAAG,EAAE,CADM;AAEXC,MAAAA,QAAQ,EAAE,EAFC;AAGXC,MAAAA,OAAO,EAAE,EAHE;AAIXC,MAAAA,OAAO,EAAE;AAJE,KAF+B;AAQ5CT,IAAAA,SAAS,EAAE,EARiC;AAS5CD,IAAAA,OAAO,EAAE;AATmC,GAAV,CAApC;AAAA;AAAA,MAAOL,KAAP;AAAA,MAAcgB,QAAd;;AAYA,sBAAO,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAE,CAAChB,KAAD,EAAQgB,QAAR;AAAjB,KAAwCN,KAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;AACD,CAdD;;AAgBA,IAAMO,eAAe,GAAG,SAAlBA,eAAkB,GAAM;AAC5B,SAAOxB,UAAU,CAACI,YAAD,CAAjB;AACD,CAFD;;AAIA,SAASW,aAAT,EAAwBS,eAAxB","sourcesContent":["import React, { createContext, useReducer, useContext } from \"react\";\nimport {\n  SET_CURRENT_JOKE,\n  // REMOVE_POST,\n  // UPDATE_POSTS,\n  // ADD_POST,\n  ADD_FAVORITE,\n  // UPDATE_FAVORITES,\n  // REMOVE_FAVORITE,\n  LOADING\n} from \"./actions\";\n\nconst StoreContext = createContext();\nconst { Provider } = StoreContext;\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n  case SET_CURRENT_JOKE:\n    return {\n      ...state,\n      currentJoke: action.joke,\n      loading: false\n    };\n\n  // case UPDATE_POSTS:\n  //   return {\n  //     ...state,\n  //     posts: [...action.posts],\n  //     loading: false\n  //   };\n\n  // case ADD_POST:\n  //   return {\n  //     ...state,\n  //     posts: [action.post, ...state.posts],\n  //     loading: false\n  //   };\n\n  // case REMOVE_POST:\n  //   return {\n  //     ...state,\n  //     posts: state.posts.filter((post) => {\n  //       return post._id !== action._id; \n  //     })\n  //   };\n\n  case ADD_FAVORITE:\n    return {\n      ...state,\n      favorites: [action.post, ...state.favorites],\n      loading: false\n    };\n\n  // case UPDATE_FAVORITES:\n  //   return {\n  //     ...state,\n  //     favorites: [...state.favorites],\n  //     loading: false\n  //   };\n\n  // case REMOVE_FAVORITE:\n  //   return {\n  //     ...state,\n  //     favorites: state.favorites.filter((post) => {\n  //       return post._id !== action._id; \n  //     })\n  //   };\n\n  case LOADING:\n    return {\n      ...state,\n      loading: true\n    };\n\n  default:\n    return state;\n  }\n};\n\nconst StoreProvider = ({ value = [], ...props }) => {\n  const [state, dispatch] = useReducer(reducer, {\n    jokes: [],\n    currentJoke: {\n      _id: 0,\n      joketype: \"\",\n      partOne: \"\",\n      partTwo: \"\"\n    },\n    favorites: [],\n    loading: false\n  });\n\n  return <Provider value={[state, dispatch]} {...props} />;\n};\n\nconst useStoreContext = () => {\n  return useContext(StoreContext);\n};\n\nexport { StoreProvider, useStoreContext };\n\n"]},"metadata":{},"sourceType":"module"}