{"ast":null,"code":"import _defineProperty from \"/Users/austenhughes/The-Baffoonery/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/Users/austenhughes/The-Baffoonery/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/Users/austenhughes/The-Baffoonery/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/austenhughes/The-Baffoonery/client/src/components/NewJokeForm/index.js\";\n// import React from \"react\";\nimport React, { useState, useEffect } from \"react\";\nimport { Button } from '@material-ui/core';\nimport API from \"../../utils/API\";\n\nfunction NewJokeForm(props) {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      jokes = _useState2[0],\n      setJoks = _useState2[1];\n\n  var _useState3 = useState({}),\n      _useState4 = _slicedToArray(_useState3, 2),\n      formObject = _useState4[0],\n      setFormObject = _useState4[1];\n\n  useEffect(function () {\n    console.log(\"hi\");\n    loadJokes();\n  }, []); // Loads all jokes and sets them to jokes\n\n  function loadJokes() {\n    console.log(\"also hi\");\n    API.getJokes().then(function (res) {\n      return setJokes(res.data);\n    }).catch(function (err) {\n      return console.log(err);\n    });\n  }\n\n  ;\n\n  function handleInputChange(event) {\n    var _event$target = event.target,\n        name = _event$target.name,\n        value = _event$target.value;\n    setFormObject(_objectSpread(_objectSpread({}, formObject), {}, _defineProperty({}, name, value)));\n  }\n\n  ;\n\n  function handleFormSubmitNewJoke(event) {\n    event.preventDefault();\n    console.log(\"Hi from over here\");\n\n    if (formObject.joketype) {\n      API.saveJokes({\n        userID: \"1\",\n        postID: 1,\n        joketype: formObject.joketype,\n        partOne: formObject.partOne,\n        partTwo: formObject.partTwo\n      }) // .then(res => loadJokes())\n      .catch(function (err) {\n        return console.log(err);\n      });\n    }\n  }\n\n  ;\n  return /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"newJokeForm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    onChange: handleInputChange,\n    value: props.value,\n    name: \"title\",\n    type: \"text\",\n    className: \"form-control\",\n    placeholder: \"Title\",\n    id: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    onChange: handleInputChange,\n    value: props.value,\n    name: \"part1\",\n    type: \"text\",\n    className: \"form-control\",\n    placeholder: \"Part 1\",\n    id: \"Part1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    onChange: handleInputChange,\n    value: props.value,\n    name: \"part2\",\n    type: \"text\",\n    className: \"form-control\",\n    placeholder: \"Part 2\",\n    id: \"Part2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    onClick: handleFormSubmitNewJoke,\n    className: \"btn btn-primary SaveNewJokeBtn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }\n  }, \"SAVE\"));\n}\n\nexport default NewJokeForm;","map":{"version":3,"sources":["/Users/austenhughes/The-Baffoonery/client/src/components/NewJokeForm/index.js"],"names":["React","useState","useEffect","Button","API","NewJokeForm","props","jokes","setJoks","formObject","setFormObject","console","log","loadJokes","getJokes","then","res","setJokes","data","catch","err","handleInputChange","event","target","name","value","handleFormSubmitNewJoke","preventDefault","joketype","saveJokes","userID","postID","partOne","partTwo"],"mappings":"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","sourcesContent":["// import React from \"react\";\nimport React, { useState, useEffect } from \"react\";\nimport { Button } from '@material-ui/core';\n\nimport API from \"../../utils/API\";\n\n\nfunction NewJokeForm(props) {\n\n  const [jokes, setJoks] = useState([])\n  const [formObject, setFormObject] = useState({})\n\n  useEffect(() => {\n    console.log(\"hi\")\n    loadJokes()\n  }, [])\n\n  // Loads all jokes and sets them to jokes\n  function loadJokes() {\n    console.log(\"also hi\")\n    API.getJokes()\n      .then(res => \n        setJokes(res.data)\n      )\n      .catch(err => console.log(err));\n  };\n\n  function handleInputChange(event) {\n    const { name, value } = event.target;\n    setFormObject({...formObject, [name]: value})\n    };\n\n  function handleFormSubmitNewJoke(event) {\n      event.preventDefault();\n      console.log(\"Hi from over here\")\n      if (formObject.joketype) {\n        API.saveJokes({\n          userID: \"1\",\n          postID: 1,\n          joketype: formObject.joketype,\n          partOne: formObject.partOne,\n          partTwo: formObject.partTwo\n        })\n          // .then(res => loadJokes())\n          .catch(err => console.log(err));\n      }\n    };\n\n  return (\n    <form>\n      <div className=\"newJokeForm\">\n        <input\n          onChange={handleInputChange}\n          value={props.value}\n          name=\"title\"\n          type=\"text\"\n          className=\"form-control\"\n          placeholder=\"Title\"\n          id=\"title\"\n        />\n        <input\n          onChange={handleInputChange}\n          value={props.value}\n          name=\"part1\"\n          type=\"text\"\n          className=\"form-control\"\n          placeholder=\"Part 1\"\n          id=\"Part1\"\n        />\n        <input\n          onChange={handleInputChange}\n          value={props.value}\n          name=\"part2\"\n          type=\"text\"\n          className=\"form-control\"\n          placeholder=\"Part 2\"\n          id=\"Part2\"\n        />\n      </div>\n\n      <Button \n        onClick={handleFormSubmitNewJoke} \n        className=\"btn btn-primary SaveNewJokeBtn\">\n        SAVE\n      </Button>\n\n    </form>\n  );\n}\n\nexport default NewJokeForm;"]},"metadata":{},"sourceType":"module"}