{"ast":null,"code":"import _defineProperty from \"/Users/austenhughes/The-Baffoonery/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/Users/austenhughes/The-Baffoonery/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/Users/austenhughes/The-Baffoonery/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/austenhughes/The-Baffoonery/client/src/components/NewJokeForm/index.js\";\n// import React from \"react\";\nimport React, { useState } from \"react\";\nimport { Button } from '@material-ui/core';\nimport API from \"../../utils/API\";\n\nfunction NewJokeForm(props) {\n  // const [jokes, setJokes] = useState([])\n  var _useState = useState({}),\n      _useState2 = _slicedToArray(_useState, 2),\n      newJoke = _useState2[0],\n      setNewJoke = _useState2[1]; // useEffect(() => {\n  //   console.log(\"hi\")\n  //   loadJokes()\n  // }, [])\n  // // Loads all jokes and sets them to jokes\n  // function loadJokes() {\n  //   console.log(\"also hi\")\n  //   API.getJokes()\n  //     .then(res => \n  //       setJokes(res.data)\n  //     )\n  //     .catch(err => console.log(err));\n  // };\n\n\n  function handleInputChange(event) {\n    var _event$target = event.target,\n        name = _event$target.name,\n        value = _event$target.value;\n    setNewJoke(_objectSpread(_objectSpread({}, newJoke), {}, _defineProperty({}, name, value)));\n  }\n\n  ;\n\n  function handleFormSubmitNewJoke(event) {\n    event.preventDefault();\n    console.log(\"Hi from over here\");\n    API.saveJokes({\n      userID: \"1\",\n      postID: 1,\n      joketype: newJoke.joketype,\n      part1: newJoke.part1,\n      partTwo: newJoke.part2\n    }) // .then(res => loadJokes())\n    .catch(function (err) {\n      return console.log(err);\n    });\n  }\n\n  ;\n  return /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"newJokeForm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    onChange: handleInputChange,\n    value: props.value,\n    name: \"joketype\",\n    type: \"text\",\n    className: \"form-control\",\n    placeholder: \"Joke type\",\n    id: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    onChange: handleInputChange,\n    value: props.value,\n    name: \"part1\",\n    type: \"text\",\n    className: \"form-control\",\n    placeholder: \"Part 1\",\n    id: \"Part1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    onChange: handleInputChange,\n    value: props.value,\n    name: \"part2\",\n    type: \"text\",\n    className: \"form-control\",\n    placeholder: \"Part 2\",\n    id: \"Part2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    onClick: handleFormSubmitNewJoke,\n    className: \"btn btn-primary SaveNewJokeBtn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }, \"SAVE\"));\n}\n\nexport default NewJokeForm;","map":{"version":3,"sources":["/Users/austenhughes/The-Baffoonery/client/src/components/NewJokeForm/index.js"],"names":["React","useState","Button","API","NewJokeForm","props","newJoke","setNewJoke","handleInputChange","event","target","name","value","handleFormSubmitNewJoke","preventDefault","console","log","saveJokes","userID","postID","joketype","part1","partTwo","part2","catch","err"],"mappings":";;;;AAAA;AACA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,MAAT,QAAuB,mBAAvB;AAEA,OAAOC,GAAP,MAAgB,iBAAhB;;AAGA,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AAE1B;AACA,kBAA8BJ,QAAQ,CAAC,EAAD,CAAtC;AAAA;AAAA,MAAOK,OAAP;AAAA,MAAgBC,UAAhB,iBAH0B,CAK1B;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,WAASC,iBAAT,CAA2BC,KAA3B,EAAkC;AAChC,wBAAwBA,KAAK,CAACC,MAA9B;AAAA,QAAQC,IAAR,iBAAQA,IAAR;AAAA,QAAcC,KAAd,iBAAcA,KAAd;AACAL,IAAAA,UAAU,iCAAKD,OAAL,2BAAeK,IAAf,EAAsBC,KAAtB,GAAV;AACC;;AAAA;;AAEH,WAASC,uBAAT,CAAiCJ,KAAjC,EAAwC;AACpCA,IAAAA,KAAK,CAACK,cAAN;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACEb,IAAAA,GAAG,CAACc,SAAJ,CAAc;AACZC,MAAAA,MAAM,EAAE,GADI;AAEZC,MAAAA,MAAM,EAAE,CAFI;AAGZC,MAAAA,QAAQ,EAAEd,OAAO,CAACc,QAHN;AAIZC,MAAAA,KAAK,EAAEf,OAAO,CAACe,KAJH;AAKZC,MAAAA,OAAO,EAAEhB,OAAO,CAACiB;AALL,KAAd,EAOE;AAPF,KAQGC,KARH,CAQS,UAAAC,GAAG;AAAA,aAAIV,OAAO,CAACC,GAAR,CAAYS,GAAZ,CAAJ;AAAA,KARZ;AASH;;AAAA;AAEH,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,QAAQ,EAAEjB,iBADZ;AAEE,IAAA,KAAK,EAAEH,KAAK,CAACO,KAFf;AAGE,IAAA,IAAI,EAAC,UAHP;AAIE,IAAA,IAAI,EAAC,MAJP;AAKE,IAAA,SAAS,EAAC,cALZ;AAME,IAAA,WAAW,EAAC,WANd;AAOE,IAAA,EAAE,EAAC,OAPL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAUE;AACE,IAAA,QAAQ,EAAEJ,iBADZ;AAEE,IAAA,KAAK,EAAEH,KAAK,CAACO,KAFf;AAGE,IAAA,IAAI,EAAC,OAHP;AAIE,IAAA,IAAI,EAAC,MAJP;AAKE,IAAA,SAAS,EAAC,cALZ;AAME,IAAA,WAAW,EAAC,QANd;AAOE,IAAA,EAAE,EAAC,OAPL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVF,eAmBE;AACE,IAAA,QAAQ,EAAEJ,iBADZ;AAEE,IAAA,KAAK,EAAEH,KAAK,CAACO,KAFf;AAGE,IAAA,IAAI,EAAC,OAHP;AAIE,IAAA,IAAI,EAAC,MAJP;AAKE,IAAA,SAAS,EAAC,cALZ;AAME,IAAA,WAAW,EAAC,QANd;AAOE,IAAA,EAAE,EAAC,OAPL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAnBF,CADF,eA+BE,oBAAC,MAAD;AACE,IAAA,OAAO,EAAEC,uBADX;AAEE,IAAA,SAAS,EAAC,gCAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YA/BF,CADF;AAwCD;;AAED,eAAeT,WAAf","sourcesContent":["// import React from \"react\";\nimport React, { useState } from \"react\";\nimport { Button } from '@material-ui/core';\n\nimport API from \"../../utils/API\";\n\n\nfunction NewJokeForm(props) {\n\n  // const [jokes, setJokes] = useState([])\n  const [newJoke, setNewJoke] = useState({})\n\n  // useEffect(() => {\n  //   console.log(\"hi\")\n  //   loadJokes()\n  // }, [])\n\n  // // Loads all jokes and sets them to jokes\n  // function loadJokes() {\n  //   console.log(\"also hi\")\n  //   API.getJokes()\n  //     .then(res => \n  //       setJokes(res.data)\n  //     )\n  //     .catch(err => console.log(err));\n  // };\n\n  function handleInputChange(event) {\n    const { name, value } = event.target;\n    setNewJoke({...newJoke, [name]: value})\n    };\n\n  function handleFormSubmitNewJoke(event) {\n      event.preventDefault();\n      console.log(\"Hi from over here\")  \n        API.saveJokes({\n          userID: \"1\",\n          postID: 1,\n          joketype: newJoke.joketype,\n          part1: newJoke.part1,\n          partTwo: newJoke.part2\n        })\n          // .then(res => loadJokes())\n          .catch(err => console.log(err));\n    };\n\n  return (\n    <form>\n      <div className=\"newJokeForm\">\n        <input\n          onChange={handleInputChange}\n          value={props.value}\n          name=\"joketype\"\n          type=\"text\"\n          className=\"form-control\"\n          placeholder=\"Joke type\"\n          id=\"title\"\n        />\n        <input\n          onChange={handleInputChange}\n          value={props.value}\n          name=\"part1\"\n          type=\"text\"\n          className=\"form-control\"\n          placeholder=\"Part 1\"\n          id=\"Part1\"\n        />\n        <input\n          onChange={handleInputChange}\n          value={props.value}\n          name=\"part2\"\n          type=\"text\"\n          className=\"form-control\"\n          placeholder=\"Part 2\"\n          id=\"Part2\"\n        />\n      </div>\n\n      <Button \n        onClick={handleFormSubmitNewJoke} \n        className=\"btn btn-primary SaveNewJokeBtn\">\n        SAVE\n      </Button>\n\n    </form>\n  );\n}\n\nexport default NewJokeForm;"]},"metadata":{},"sourceType":"module"}